generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  category_id   Int        @id
  category_name String
  description   String?
  // This type is currently not supported.
  // picture    binary?
  products      products[]
}

model customercustomerdemo {
  customer_id          String
  customer_type_id     String
  customers            customers            @relation(fields: [customer_id], references: [customer_id])
  customerdemographics customerdemographics @relation(fields: [customer_type_id], references: [customer_type_id])
  desc                 String // Dummy scalar field required because of typegen issue #648 in nexus-plugin-prisma
  @@id([customer_id, customer_type_id])
}

model customerdemographics {
  customer_desc        String?
  customer_type_id     String                 @id
  customercustomerdemo customercustomerdemo[]
}

model customers {
  address              String?
  city                 String?
  company_name         String
  contact_name         String?
  contact_title        String?
  country              String?
  customer_id          String                 @id
  fax                  String?
  phone                String?
  postal_code          String?
  region               String?
  customercustomerdemo customercustomerdemo[]
  orders               orders[]
}

model employees {
  address             String?
  birth_date          DateTime?
  city                String?
  country             String?
  employee_id         Int                   @id
  extension           String?
  first_name          String
  hire_date           DateTime?
  home_phone          String?
  last_name           String
  notes               String?
  // This type is currently not supported.
  // photo            binary?
  photo_path          String?
  postal_code         String?
  region              String?
  reports_to          Int?
  title               String?
  title_of_courtesy   String?
  employees           employees?            @relation("employeesToemployees_reports_to", fields: [reports_to], references: [employee_id])
  other_employees     employees[]           @relation("employeesToemployees_reports_to")
  employeeterritories employeeterritories[]
  orders              orders[]
}

model employeeterritories {
  employee_id  Int
  territory_id String
  employees    employees   @relation(fields: [employee_id], references: [employee_id])
  territories  territories @relation(fields: [territory_id], references: [territory_id])
  desc         String // Dummy scalar field required because of typegen issue #648 in nexus-plugin-prisma
  @@id([employee_id, territory_id])
}

model orderdetails {
  discount   Float
  order_id   Int
  product_id Int
  quantity   Int
  unit_price Float
  orders     orders   @relation(fields: [order_id], references: [order_id])
  products   products @relation(fields: [product_id], references: [product_id])

  @@id([order_id, product_id])
}

model orders {
  customer_id      String?
  employee_id      Int?
  freight          Float?
  order_date       DateTime?
  order_id         Int            @id
  required_date    DateTime?
  ship_address     String?
  ship_city        String?
  ship_country     String?
  ship_name        String?
  ship_postal_code String?
  ship_region      String?
  ship_via         Int?
  shipped_date     DateTime?
  customers        customers?     @relation(fields: [customer_id], references: [customer_id])
  employees        employees?     @relation(fields: [employee_id], references: [employee_id])
  shippers         shippers?      @relation(fields: [ship_via], references: [shipper_id])
  orderdetails     orderdetails[]
}

model products {
  category_id       Int?
  discontinued      Int
  product_id        Int            @id
  product_name      String
  quantity_per_unit String?
  reorder_level     Int?
  supplier_id       Int?
  unit_price        Float?
  units_in_stock    Int?
  units_on_order    Int?
  categories        categories?    @relation(fields: [category_id], references: [category_id])
  suppliers         suppliers?     @relation(fields: [supplier_id], references: [supplier_id])
  orderdetails      orderdetails[]
}

model region {
  region_description String
  region_id          Int           @id
  territories        territories[]
}

model shippers {
  company_name String
  phone        String?
  shipper_id   Int      @id
  orders       orders[]
}

model suppliers {
  address       String?
  city          String?
  company_name  String
  contact_name  String?
  contact_title String?
  country       String?
  fax           String?
  homepage      String?
  phone         String?
  postal_code   String?
  region        String?
  supplier_id   Int        @id
  products      products[]
}

model territories {
  region_id             Int
  territory_description String
  territory_id          String                @id
  region                region                @relation(fields: [region_id], references: [region_id])
  employeeterritories   employeeterritories[]
}

model usstates {
  state_abbr   String?
  state_id     Int     @id
  state_name   String?
  state_region String?
}